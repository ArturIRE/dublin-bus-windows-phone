//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 3.7.0.0
// 

namespace Generated
{

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://dublinbus.ie/", ConfigurationName = "DublinBusRTPIServiceSoap")]
    public interface DublinBusRTPIServiceSoap
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/TestService", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginTestService(System.AsyncCallback callback, object asyncState);

        string EndTestService(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetRealTimeStopData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetRealTimeStopData(int stopId, bool forceRefresh, System.AsyncCallback callback, object asyncState);

        GetRealTimeStopDataResponseGetRealTimeStopDataResult EndGetRealTimeStopData(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetRoutes", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState);

        RoutesResponse EndGetRoutes(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetDestinations", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetDestinations(string filter, System.AsyncCallback callback, object asyncState);

        DestinationsResponse EndGetDestinations(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetAllDestinations", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetAllDestinations(System.AsyncCallback callback, object asyncState);

        DestinationsResponse EndGetAllDestinations(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetStopDataByAddress", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetStopDataByAddress(string address, System.AsyncCallback callback, object asyncState);

        GetStopDataByAddressResponseGetStopDataByAddressResult EndGetStopDataByAddress(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetStopDataByRouteAndDirection", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetStopDataByRouteAndDirection(string route, string direction, System.AsyncCallback callback, object asyncState);

        GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult EndGetStopDataByRouteAndDirection(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetStopDataByRoute", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetStopDataByRoute(string route, System.AsyncCallback callback, object asyncState);

        ArrayOfXElement EndGetStopDataByRoute(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetRoutesServicedByStopNumber", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetRoutesServicedByStopNumber(int stopId, System.AsyncCallback callback, object asyncState);

        Route[] EndGetRoutesServicedByStopNumber(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/StartTimer", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginStartTimer(System.AsyncCallback callback, object asyncState);

        bool EndStartTimer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/StopTimer", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginStopTimer(System.AsyncCallback callback, object asyncState);

        bool EndStopTimer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/GetCurrentSettings", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginGetCurrentSettings(System.AsyncCallback callback, object asyncState);

        string[] EndGetCurrentSettings(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://dublinbus.ie/SetCurrentSettings", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.IAsyncResult BeginSetCurrentSettings(string[] values, System.AsyncCallback callback, object asyncState);

        void EndSetCurrentSettings(System.IAsyncResult result);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://dublinbus.ie/")]
    public partial class GetRealTimeStopDataResponseGetRealTimeStopDataResult
    {

        private System.Xml.Linq.XElement[] anyField;

        private System.Xml.Linq.XElement any1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "http://www.w3.org/2001/XMLSchema", Order = 0)]
        public System.Xml.Linq.XElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1", Order = 1)]
        public System.Xml.Linq.XElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://dublinbus.ie/")]
    public partial class DestinationsResponse
    {

        private Destination[] destinationsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
        public Destination[] Destinations
        {
            get
            {
                return this.destinationsField;
            }
            set
            {
                this.destinationsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://dublinbus.ie/")]
    public partial class Destination
    {

        private int stopNumberField;

        private string typeField;

        private double longitudeField;

        private double latitudeField;

        private string descriptionField;

        private Route[] routesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public int StopNumber
        {
            get
            {
                return this.stopNumberField;
            }
            set
            {
                this.stopNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public double Longitude
        {
            get
            {
                return this.longitudeField;
            }
            set
            {
                this.longitudeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public double Latitude
        {
            get
            {
                return this.latitudeField;
            }
            set
            {
                this.latitudeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 5)]
        public Route[] Routes
        {
            get
            {
                return this.routesField;
            }
            set
            {
                this.routesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://dublinbus.ie/")]
    public partial class Route
    {

        private string numberField;

        private string directionField;

        private int seqNumberField;

        private string towardsField;

        private string fromField;

        private Destination[] destinationsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0)]
        public string Number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 1)]
        public string Direction
        {
            get
            {
                return this.directionField;
            }
            set
            {
                this.directionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2)]
        public int SeqNumber
        {
            get
            {
                return this.seqNumberField;
            }
            set
            {
                this.seqNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 3)]
        public string Towards
        {
            get
            {
                return this.towardsField;
            }
            set
            {
                this.towardsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 4)]
        public string From
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Destinations", IsNullable = true, Order = 5)]
        public Destination[] Destinations
        {
            get
            {
                return this.destinationsField;
            }
            set
            {
                this.destinationsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://dublinbus.ie/")]
    public partial class RoutesResponse
    {

        private Route[] routesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order = 0)]
        public Route[] Routes
        {
            get
            {
                return this.routesField;
            }
            set
            {
                this.routesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://dublinbus.ie/")]
    public partial class GetStopDataByAddressResponseGetStopDataByAddressResult
    {

        private System.Xml.Linq.XElement[] anyField;

        private System.Xml.Linq.XElement any1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "http://www.w3.org/2001/XMLSchema", Order = 0)]
        public System.Xml.Linq.XElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1", Order = 1)]
        public System.Xml.Linq.XElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://dublinbus.ie/")]
    public partial class GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult
    {

        private System.Xml.Linq.XElement[] anyField;

        private System.Xml.Linq.XElement any1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "http://www.w3.org/2001/XMLSchema", Order = 0)]
        public System.Xml.Linq.XElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1", Order = 1)]
        public System.Xml.Linq.XElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DublinBusRTPIServiceSoapChannel : DublinBusRTPIServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public TestServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRealTimeStopDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetRealTimeStopDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public GetRealTimeStopDataResponseGetRealTimeStopDataResult Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((GetRealTimeStopDataResponseGetRealTimeStopDataResult)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public RoutesResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RoutesResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDestinationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetDestinationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public DestinationsResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((DestinationsResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDestinationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetAllDestinationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public DestinationsResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((DestinationsResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStopDataByAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetStopDataByAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public GetStopDataByAddressResponseGetStopDataByAddressResult Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((GetStopDataByAddressResponseGetStopDataByAddressResult)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStopDataByRouteAndDirectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetStopDataByRouteAndDirectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStopDataByRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetStopDataByRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public ArrayOfXElement Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((ArrayOfXElement)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoutesServicedByStopNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetRoutesServicedByStopNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Route[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Route[])(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartTimerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public StartTimerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StopTimerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public StopTimerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCurrentSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DublinBusRTPIServiceSoapClient : System.ServiceModel.ClientBase<DublinBusRTPIServiceSoap>, DublinBusRTPIServiceSoap
    {

        private BeginOperationDelegate onBeginTestServiceDelegate;

        private EndOperationDelegate onEndTestServiceDelegate;

        private System.Threading.SendOrPostCallback onTestServiceCompletedDelegate;

        private BeginOperationDelegate onBeginGetRealTimeStopDataDelegate;

        private EndOperationDelegate onEndGetRealTimeStopDataDelegate;

        private System.Threading.SendOrPostCallback onGetRealTimeStopDataCompletedDelegate;

        private BeginOperationDelegate onBeginGetRoutesDelegate;

        private EndOperationDelegate onEndGetRoutesDelegate;

        private System.Threading.SendOrPostCallback onGetRoutesCompletedDelegate;

        private BeginOperationDelegate onBeginGetDestinationsDelegate;

        private EndOperationDelegate onEndGetDestinationsDelegate;

        private System.Threading.SendOrPostCallback onGetDestinationsCompletedDelegate;

        private BeginOperationDelegate onBeginGetAllDestinationsDelegate;

        private EndOperationDelegate onEndGetAllDestinationsDelegate;

        private System.Threading.SendOrPostCallback onGetAllDestinationsCompletedDelegate;

        private BeginOperationDelegate onBeginGetStopDataByAddressDelegate;

        private EndOperationDelegate onEndGetStopDataByAddressDelegate;

        private System.Threading.SendOrPostCallback onGetStopDataByAddressCompletedDelegate;

        private BeginOperationDelegate onBeginGetStopDataByRouteAndDirectionDelegate;

        private EndOperationDelegate onEndGetStopDataByRouteAndDirectionDelegate;

        private System.Threading.SendOrPostCallback onGetStopDataByRouteAndDirectionCompletedDelegate;

        private BeginOperationDelegate onBeginGetStopDataByRouteDelegate;

        private EndOperationDelegate onEndGetStopDataByRouteDelegate;

        private System.Threading.SendOrPostCallback onGetStopDataByRouteCompletedDelegate;

        private BeginOperationDelegate onBeginGetRoutesServicedByStopNumberDelegate;

        private EndOperationDelegate onEndGetRoutesServicedByStopNumberDelegate;

        private System.Threading.SendOrPostCallback onGetRoutesServicedByStopNumberCompletedDelegate;

        private BeginOperationDelegate onBeginStartTimerDelegate;

        private EndOperationDelegate onEndStartTimerDelegate;

        private System.Threading.SendOrPostCallback onStartTimerCompletedDelegate;

        private BeginOperationDelegate onBeginStopTimerDelegate;

        private EndOperationDelegate onEndStopTimerDelegate;

        private System.Threading.SendOrPostCallback onStopTimerCompletedDelegate;

        private BeginOperationDelegate onBeginGetCurrentSettingsDelegate;

        private EndOperationDelegate onEndGetCurrentSettingsDelegate;

        private System.Threading.SendOrPostCallback onGetCurrentSettingsCompletedDelegate;

        private BeginOperationDelegate onBeginSetCurrentSettingsDelegate;

        private EndOperationDelegate onEndSetCurrentSettingsDelegate;

        private System.Threading.SendOrPostCallback onSetCurrentSettingsCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public DublinBusRTPIServiceSoapClient()
        {
        }

        public DublinBusRTPIServiceSoapClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public DublinBusRTPIServiceSoapClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DublinBusRTPIServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DublinBusRTPIServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<TestServiceCompletedEventArgs> TestServiceCompleted;

        public event System.EventHandler<GetRealTimeStopDataCompletedEventArgs> GetRealTimeStopDataCompleted;

        public event System.EventHandler<GetRoutesCompletedEventArgs> GetRoutesCompleted;

        public event System.EventHandler<GetDestinationsCompletedEventArgs> GetDestinationsCompleted;

        public event System.EventHandler<GetAllDestinationsCompletedEventArgs> GetAllDestinationsCompleted;

        public event System.EventHandler<GetStopDataByAddressCompletedEventArgs> GetStopDataByAddressCompleted;

        public event System.EventHandler<GetStopDataByRouteAndDirectionCompletedEventArgs> GetStopDataByRouteAndDirectionCompleted;

        public event System.EventHandler<GetStopDataByRouteCompletedEventArgs> GetStopDataByRouteCompleted;

        public event System.EventHandler<GetRoutesServicedByStopNumberCompletedEventArgs> GetRoutesServicedByStopNumberCompleted;

        public event System.EventHandler<StartTimerCompletedEventArgs> StartTimerCompleted;

        public event System.EventHandler<StopTimerCompletedEventArgs> StopTimerCompleted;

        public event System.EventHandler<GetCurrentSettingsCompletedEventArgs> GetCurrentSettingsCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetCurrentSettingsCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginTestService(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginTestService(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DublinBusRTPIServiceSoap.EndTestService(System.IAsyncResult result)
        {
            return base.Channel.EndTestService(result);
        }

        private System.IAsyncResult OnBeginTestService(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DublinBusRTPIServiceSoap)(this)).BeginTestService(callback, asyncState);
        }

        private object[] OnEndTestService(System.IAsyncResult result)
        {
            string retVal = ((DublinBusRTPIServiceSoap)(this)).EndTestService(result);
            return new object[] {
                retVal};
        }

        private void OnTestServiceCompleted(object state)
        {
            if ((this.TestServiceCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestServiceCompleted(this, new TestServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void TestServiceAsync()
        {
            this.TestServiceAsync(null);
        }

        public void TestServiceAsync(object userState)
        {
            if ((this.onBeginTestServiceDelegate == null))
            {
                this.onBeginTestServiceDelegate = new BeginOperationDelegate(this.OnBeginTestService);
            }
            if ((this.onEndTestServiceDelegate == null))
            {
                this.onEndTestServiceDelegate = new EndOperationDelegate(this.OnEndTestService);
            }
            if ((this.onTestServiceCompletedDelegate == null))
            {
                this.onTestServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestServiceCompleted);
            }
            base.InvokeAsync(this.onBeginTestServiceDelegate, null, this.onEndTestServiceDelegate, this.onTestServiceCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetRealTimeStopData(int stopId, bool forceRefresh, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetRealTimeStopData(stopId, forceRefresh, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetRealTimeStopDataResponseGetRealTimeStopDataResult DublinBusRTPIServiceSoap.EndGetRealTimeStopData(System.IAsyncResult result)
        {
            return base.Channel.EndGetRealTimeStopData(result);
        }

        private System.IAsyncResult OnBeginGetRealTimeStopData(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int stopId = ((int)(inValues[0]));
            bool forceRefresh = ((bool)(inValues[1]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetRealTimeStopData(stopId, forceRefresh, callback, asyncState);
        }

        private object[] OnEndGetRealTimeStopData(System.IAsyncResult result)
        {
            GetRealTimeStopDataResponseGetRealTimeStopDataResult retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetRealTimeStopData(result);
            return new object[] {
                retVal};
        }

        private void OnGetRealTimeStopDataCompleted(object state)
        {
            if ((this.GetRealTimeStopDataCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRealTimeStopDataCompleted(this, new GetRealTimeStopDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetRealTimeStopDataAsync(int stopId, bool forceRefresh)
        {
            this.GetRealTimeStopDataAsync(stopId, forceRefresh, null);
        }

        public void GetRealTimeStopDataAsync(int stopId, bool forceRefresh, object userState)
        {
            if ((this.onBeginGetRealTimeStopDataDelegate == null))
            {
                this.onBeginGetRealTimeStopDataDelegate = new BeginOperationDelegate(this.OnBeginGetRealTimeStopData);
            }
            if ((this.onEndGetRealTimeStopDataDelegate == null))
            {
                this.onEndGetRealTimeStopDataDelegate = new EndOperationDelegate(this.OnEndGetRealTimeStopData);
            }
            if ((this.onGetRealTimeStopDataCompletedDelegate == null))
            {
                this.onGetRealTimeStopDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRealTimeStopDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRealTimeStopDataDelegate, new object[] {
                    stopId,
                    forceRefresh}, this.onEndGetRealTimeStopDataDelegate, this.onGetRealTimeStopDataCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetRoutes(filter, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RoutesResponse DublinBusRTPIServiceSoap.EndGetRoutes(System.IAsyncResult result)
        {
            return base.Channel.EndGetRoutes(result);
        }

        private System.IAsyncResult OnBeginGetRoutes(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string filter = ((string)(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetRoutes(filter, callback, asyncState);
        }

        private object[] OnEndGetRoutes(System.IAsyncResult result)
        {
            RoutesResponse retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetRoutes(result);
            return new object[] {
                retVal};
        }

        private void OnGetRoutesCompleted(object state)
        {
            if ((this.GetRoutesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoutesCompleted(this, new GetRoutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetRoutesAsync(string filter)
        {
            this.GetRoutesAsync(filter, null);
        }

        public void GetRoutesAsync(string filter, object userState)
        {
            if ((this.onBeginGetRoutesDelegate == null))
            {
                this.onBeginGetRoutesDelegate = new BeginOperationDelegate(this.OnBeginGetRoutes);
            }
            if ((this.onEndGetRoutesDelegate == null))
            {
                this.onEndGetRoutesDelegate = new EndOperationDelegate(this.OnEndGetRoutes);
            }
            if ((this.onGetRoutesCompletedDelegate == null))
            {
                this.onGetRoutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoutesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoutesDelegate, new object[] {
                    filter}, this.onEndGetRoutesDelegate, this.onGetRoutesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetDestinations(string filter, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetDestinations(filter, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DestinationsResponse DublinBusRTPIServiceSoap.EndGetDestinations(System.IAsyncResult result)
        {
            return base.Channel.EndGetDestinations(result);
        }

        private System.IAsyncResult OnBeginGetDestinations(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string filter = ((string)(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetDestinations(filter, callback, asyncState);
        }

        private object[] OnEndGetDestinations(System.IAsyncResult result)
        {
            DestinationsResponse retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetDestinations(result);
            return new object[] {
                retVal};
        }

        private void OnGetDestinationsCompleted(object state)
        {
            if ((this.GetDestinationsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDestinationsCompleted(this, new GetDestinationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDestinationsAsync(string filter)
        {
            this.GetDestinationsAsync(filter, null);
        }

        public void GetDestinationsAsync(string filter, object userState)
        {
            if ((this.onBeginGetDestinationsDelegate == null))
            {
                this.onBeginGetDestinationsDelegate = new BeginOperationDelegate(this.OnBeginGetDestinations);
            }
            if ((this.onEndGetDestinationsDelegate == null))
            {
                this.onEndGetDestinationsDelegate = new EndOperationDelegate(this.OnEndGetDestinations);
            }
            if ((this.onGetDestinationsCompletedDelegate == null))
            {
                this.onGetDestinationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDestinationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDestinationsDelegate, new object[] {
                    filter}, this.onEndGetDestinationsDelegate, this.onGetDestinationsCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetAllDestinations(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetAllDestinations(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DestinationsResponse DublinBusRTPIServiceSoap.EndGetAllDestinations(System.IAsyncResult result)
        {
            return base.Channel.EndGetAllDestinations(result);
        }

        private System.IAsyncResult OnBeginGetAllDestinations(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetAllDestinations(callback, asyncState);
        }

        private object[] OnEndGetAllDestinations(System.IAsyncResult result)
        {
            DestinationsResponse retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetAllDestinations(result);
            return new object[] {
                retVal};
        }

        private void OnGetAllDestinationsCompleted(object state)
        {
            if ((this.GetAllDestinationsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDestinationsCompleted(this, new GetAllDestinationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetAllDestinationsAsync()
        {
            this.GetAllDestinationsAsync(null);
        }

        public void GetAllDestinationsAsync(object userState)
        {
            if ((this.onBeginGetAllDestinationsDelegate == null))
            {
                this.onBeginGetAllDestinationsDelegate = new BeginOperationDelegate(this.OnBeginGetAllDestinations);
            }
            if ((this.onEndGetAllDestinationsDelegate == null))
            {
                this.onEndGetAllDestinationsDelegate = new EndOperationDelegate(this.OnEndGetAllDestinations);
            }
            if ((this.onGetAllDestinationsCompletedDelegate == null))
            {
                this.onGetAllDestinationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDestinationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDestinationsDelegate, null, this.onEndGetAllDestinationsDelegate, this.onGetAllDestinationsCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetStopDataByAddress(string address, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetStopDataByAddress(address, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetStopDataByAddressResponseGetStopDataByAddressResult DublinBusRTPIServiceSoap.EndGetStopDataByAddress(System.IAsyncResult result)
        {
            return base.Channel.EndGetStopDataByAddress(result);
        }

        private System.IAsyncResult OnBeginGetStopDataByAddress(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string address = ((string)(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetStopDataByAddress(address, callback, asyncState);
        }

        private object[] OnEndGetStopDataByAddress(System.IAsyncResult result)
        {
            GetStopDataByAddressResponseGetStopDataByAddressResult retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetStopDataByAddress(result);
            return new object[] {
                retVal};
        }

        private void OnGetStopDataByAddressCompleted(object state)
        {
            if ((this.GetStopDataByAddressCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopDataByAddressCompleted(this, new GetStopDataByAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetStopDataByAddressAsync(string address)
        {
            this.GetStopDataByAddressAsync(address, null);
        }

        public void GetStopDataByAddressAsync(string address, object userState)
        {
            if ((this.onBeginGetStopDataByAddressDelegate == null))
            {
                this.onBeginGetStopDataByAddressDelegate = new BeginOperationDelegate(this.OnBeginGetStopDataByAddress);
            }
            if ((this.onEndGetStopDataByAddressDelegate == null))
            {
                this.onEndGetStopDataByAddressDelegate = new EndOperationDelegate(this.OnEndGetStopDataByAddress);
            }
            if ((this.onGetStopDataByAddressCompletedDelegate == null))
            {
                this.onGetStopDataByAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopDataByAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopDataByAddressDelegate, new object[] {
                    address}, this.onEndGetStopDataByAddressDelegate, this.onGetStopDataByAddressCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetStopDataByRouteAndDirection(string route, string direction, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetStopDataByRouteAndDirection(route, direction, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult DublinBusRTPIServiceSoap.EndGetStopDataByRouteAndDirection(System.IAsyncResult result)
        {
            return base.Channel.EndGetStopDataByRouteAndDirection(result);
        }

        private System.IAsyncResult OnBeginGetStopDataByRouteAndDirection(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string route = ((string)(inValues[0]));
            string direction = ((string)(inValues[1]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetStopDataByRouteAndDirection(route, direction, callback, asyncState);
        }

        private object[] OnEndGetStopDataByRouteAndDirection(System.IAsyncResult result)
        {
            GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetStopDataByRouteAndDirection(result);
            return new object[] {
                retVal};
        }

        private void OnGetStopDataByRouteAndDirectionCompleted(object state)
        {
            if ((this.GetStopDataByRouteAndDirectionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopDataByRouteAndDirectionCompleted(this, new GetStopDataByRouteAndDirectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetStopDataByRouteAndDirectionAsync(string route, string direction)
        {
            this.GetStopDataByRouteAndDirectionAsync(route, direction, null);
        }

        public void GetStopDataByRouteAndDirectionAsync(string route, string direction, object userState)
        {
            if ((this.onBeginGetStopDataByRouteAndDirectionDelegate == null))
            {
                this.onBeginGetStopDataByRouteAndDirectionDelegate = new BeginOperationDelegate(this.OnBeginGetStopDataByRouteAndDirection);
            }
            if ((this.onEndGetStopDataByRouteAndDirectionDelegate == null))
            {
                this.onEndGetStopDataByRouteAndDirectionDelegate = new EndOperationDelegate(this.OnEndGetStopDataByRouteAndDirection);
            }
            if ((this.onGetStopDataByRouteAndDirectionCompletedDelegate == null))
            {
                this.onGetStopDataByRouteAndDirectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopDataByRouteAndDirectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopDataByRouteAndDirectionDelegate, new object[] {
                    route,
                    direction}, this.onEndGetStopDataByRouteAndDirectionDelegate, this.onGetStopDataByRouteAndDirectionCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetStopDataByRoute(string route, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetStopDataByRoute(route, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ArrayOfXElement DublinBusRTPIServiceSoap.EndGetStopDataByRoute(System.IAsyncResult result)
        {
            return base.Channel.EndGetStopDataByRoute(result);
        }

        private System.IAsyncResult OnBeginGetStopDataByRoute(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string route = ((string)(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetStopDataByRoute(route, callback, asyncState);
        }

        private object[] OnEndGetStopDataByRoute(System.IAsyncResult result)
        {
            ArrayOfXElement retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetStopDataByRoute(result);
            return new object[] {
                retVal};
        }

        private void OnGetStopDataByRouteCompleted(object state)
        {
            if ((this.GetStopDataByRouteCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopDataByRouteCompleted(this, new GetStopDataByRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetStopDataByRouteAsync(string route)
        {
            this.GetStopDataByRouteAsync(route, null);
        }

        public void GetStopDataByRouteAsync(string route, object userState)
        {
            if ((this.onBeginGetStopDataByRouteDelegate == null))
            {
                this.onBeginGetStopDataByRouteDelegate = new BeginOperationDelegate(this.OnBeginGetStopDataByRoute);
            }
            if ((this.onEndGetStopDataByRouteDelegate == null))
            {
                this.onEndGetStopDataByRouteDelegate = new EndOperationDelegate(this.OnEndGetStopDataByRoute);
            }
            if ((this.onGetStopDataByRouteCompletedDelegate == null))
            {
                this.onGetStopDataByRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopDataByRouteCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopDataByRouteDelegate, new object[] {
                    route}, this.onEndGetStopDataByRouteDelegate, this.onGetStopDataByRouteCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetRoutesServicedByStopNumber(int stopId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetRoutesServicedByStopNumber(stopId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Route[] DublinBusRTPIServiceSoap.EndGetRoutesServicedByStopNumber(System.IAsyncResult result)
        {
            return base.Channel.EndGetRoutesServicedByStopNumber(result);
        }

        private System.IAsyncResult OnBeginGetRoutesServicedByStopNumber(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int stopId = ((int)(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetRoutesServicedByStopNumber(stopId, callback, asyncState);
        }

        private object[] OnEndGetRoutesServicedByStopNumber(System.IAsyncResult result)
        {
            Route[] retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetRoutesServicedByStopNumber(result);
            return new object[] {
                retVal};
        }

        private void OnGetRoutesServicedByStopNumberCompleted(object state)
        {
            if ((this.GetRoutesServicedByStopNumberCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoutesServicedByStopNumberCompleted(this, new GetRoutesServicedByStopNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetRoutesServicedByStopNumberAsync(int stopId)
        {
            this.GetRoutesServicedByStopNumberAsync(stopId, null);
        }

        public void GetRoutesServicedByStopNumberAsync(int stopId, object userState)
        {
            if ((this.onBeginGetRoutesServicedByStopNumberDelegate == null))
            {
                this.onBeginGetRoutesServicedByStopNumberDelegate = new BeginOperationDelegate(this.OnBeginGetRoutesServicedByStopNumber);
            }
            if ((this.onEndGetRoutesServicedByStopNumberDelegate == null))
            {
                this.onEndGetRoutesServicedByStopNumberDelegate = new EndOperationDelegate(this.OnEndGetRoutesServicedByStopNumber);
            }
            if ((this.onGetRoutesServicedByStopNumberCompletedDelegate == null))
            {
                this.onGetRoutesServicedByStopNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoutesServicedByStopNumberCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoutesServicedByStopNumberDelegate, new object[] {
                    stopId}, this.onEndGetRoutesServicedByStopNumberDelegate, this.onGetRoutesServicedByStopNumberCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginStartTimer(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginStartTimer(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DublinBusRTPIServiceSoap.EndStartTimer(System.IAsyncResult result)
        {
            return base.Channel.EndStartTimer(result);
        }

        private System.IAsyncResult OnBeginStartTimer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DublinBusRTPIServiceSoap)(this)).BeginStartTimer(callback, asyncState);
        }

        private object[] OnEndStartTimer(System.IAsyncResult result)
        {
            bool retVal = ((DublinBusRTPIServiceSoap)(this)).EndStartTimer(result);
            return new object[] {
                retVal};
        }

        private void OnStartTimerCompleted(object state)
        {
            if ((this.StartTimerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartTimerCompleted(this, new StartTimerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void StartTimerAsync()
        {
            this.StartTimerAsync(null);
        }

        public void StartTimerAsync(object userState)
        {
            if ((this.onBeginStartTimerDelegate == null))
            {
                this.onBeginStartTimerDelegate = new BeginOperationDelegate(this.OnBeginStartTimer);
            }
            if ((this.onEndStartTimerDelegate == null))
            {
                this.onEndStartTimerDelegate = new EndOperationDelegate(this.OnEndStartTimer);
            }
            if ((this.onStartTimerCompletedDelegate == null))
            {
                this.onStartTimerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartTimerCompleted);
            }
            base.InvokeAsync(this.onBeginStartTimerDelegate, null, this.onEndStartTimerDelegate, this.onStartTimerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginStopTimer(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginStopTimer(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DublinBusRTPIServiceSoap.EndStopTimer(System.IAsyncResult result)
        {
            return base.Channel.EndStopTimer(result);
        }

        private System.IAsyncResult OnBeginStopTimer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DublinBusRTPIServiceSoap)(this)).BeginStopTimer(callback, asyncState);
        }

        private object[] OnEndStopTimer(System.IAsyncResult result)
        {
            bool retVal = ((DublinBusRTPIServiceSoap)(this)).EndStopTimer(result);
            return new object[] {
                retVal};
        }

        private void OnStopTimerCompleted(object state)
        {
            if ((this.StopTimerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopTimerCompleted(this, new StopTimerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void StopTimerAsync()
        {
            this.StopTimerAsync(null);
        }

        public void StopTimerAsync(object userState)
        {
            if ((this.onBeginStopTimerDelegate == null))
            {
                this.onBeginStopTimerDelegate = new BeginOperationDelegate(this.OnBeginStopTimer);
            }
            if ((this.onEndStopTimerDelegate == null))
            {
                this.onEndStopTimerDelegate = new EndOperationDelegate(this.OnEndStopTimer);
            }
            if ((this.onStopTimerCompletedDelegate == null))
            {
                this.onStopTimerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopTimerCompleted);
            }
            base.InvokeAsync(this.onBeginStopTimerDelegate, null, this.onEndStopTimerDelegate, this.onStopTimerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginGetCurrentSettings(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCurrentSettings(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] DublinBusRTPIServiceSoap.EndGetCurrentSettings(System.IAsyncResult result)
        {
            return base.Channel.EndGetCurrentSettings(result);
        }

        private System.IAsyncResult OnBeginGetCurrentSettings(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DublinBusRTPIServiceSoap)(this)).BeginGetCurrentSettings(callback, asyncState);
        }

        private object[] OnEndGetCurrentSettings(System.IAsyncResult result)
        {
            string[] retVal = ((DublinBusRTPIServiceSoap)(this)).EndGetCurrentSettings(result);
            return new object[] {
                retVal};
        }

        private void OnGetCurrentSettingsCompleted(object state)
        {
            if ((this.GetCurrentSettingsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentSettingsCompleted(this, new GetCurrentSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCurrentSettingsAsync()
        {
            this.GetCurrentSettingsAsync(null);
        }

        public void GetCurrentSettingsAsync(object userState)
        {
            if ((this.onBeginGetCurrentSettingsDelegate == null))
            {
                this.onBeginGetCurrentSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentSettings);
            }
            if ((this.onEndGetCurrentSettingsDelegate == null))
            {
                this.onEndGetCurrentSettingsDelegate = new EndOperationDelegate(this.OnEndGetCurrentSettings);
            }
            if ((this.onGetCurrentSettingsCompletedDelegate == null))
            {
                this.onGetCurrentSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentSettingsDelegate, null, this.onEndGetCurrentSettingsDelegate, this.onGetCurrentSettingsCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DublinBusRTPIServiceSoap.BeginSetCurrentSettings(string[] values, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSetCurrentSettings(values, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DublinBusRTPIServiceSoap.EndSetCurrentSettings(System.IAsyncResult result)
        {
            base.Channel.EndSetCurrentSettings(result);
        }

        private System.IAsyncResult OnBeginSetCurrentSettings(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string[] values = ((string[])(inValues[0]));
            return ((DublinBusRTPIServiceSoap)(this)).BeginSetCurrentSettings(values, callback, asyncState);
        }

        private object[] OnEndSetCurrentSettings(System.IAsyncResult result)
        {
            ((DublinBusRTPIServiceSoap)(this)).EndSetCurrentSettings(result);
            return null;
        }

        private void OnSetCurrentSettingsCompleted(object state)
        {
            if ((this.SetCurrentSettingsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCurrentSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SetCurrentSettingsAsync(string[] values)
        {
            this.SetCurrentSettingsAsync(values, null);
        }

        public void SetCurrentSettingsAsync(string[] values, object userState)
        {
            if ((this.onBeginSetCurrentSettingsDelegate == null))
            {
                this.onBeginSetCurrentSettingsDelegate = new BeginOperationDelegate(this.OnBeginSetCurrentSettings);
            }
            if ((this.onEndSetCurrentSettingsDelegate == null))
            {
                this.onEndSetCurrentSettingsDelegate = new EndOperationDelegate(this.OnEndSetCurrentSettings);
            }
            if ((this.onSetCurrentSettingsCompletedDelegate == null))
            {
                this.onSetCurrentSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCurrentSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSetCurrentSettingsDelegate, new object[] {
                    values}, this.onEndSetCurrentSettingsDelegate, this.onSetCurrentSettingsCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override DublinBusRTPIServiceSoap CreateChannel()
        {
            return new DublinBusRTPIServiceSoapClientChannel(this);
        }

        private class DublinBusRTPIServiceSoapClientChannel : ChannelBase<DublinBusRTPIServiceSoap>, DublinBusRTPIServiceSoap
        {

            public DublinBusRTPIServiceSoapClientChannel(System.ServiceModel.ClientBase<DublinBusRTPIServiceSoap> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginTestService(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("TestService", _args, callback, asyncState);
                return _result;
            }

            public string EndTestService(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("TestService", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetRealTimeStopData(int stopId, bool forceRefresh, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = stopId;
                _args[1] = forceRefresh;
                System.IAsyncResult _result = base.BeginInvoke("GetRealTimeStopData", _args, callback, asyncState);
                return _result;
            }

            public GetRealTimeStopDataResponseGetRealTimeStopDataResult EndGetRealTimeStopData(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                GetRealTimeStopDataResponseGetRealTimeStopDataResult _result = ((GetRealTimeStopDataResponseGetRealTimeStopDataResult)(base.EndInvoke("GetRealTimeStopData", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetRoutes(string filter, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = filter;
                System.IAsyncResult _result = base.BeginInvoke("GetRoutes", _args, callback, asyncState);
                return _result;
            }

            public RoutesResponse EndGetRoutes(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                RoutesResponse _result = ((RoutesResponse)(base.EndInvoke("GetRoutes", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetDestinations(string filter, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = filter;
                System.IAsyncResult _result = base.BeginInvoke("GetDestinations", _args, callback, asyncState);
                return _result;
            }

            public DestinationsResponse EndGetDestinations(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                DestinationsResponse _result = ((DestinationsResponse)(base.EndInvoke("GetDestinations", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetAllDestinations(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllDestinations", _args, callback, asyncState);
                return _result;
            }

            public DestinationsResponse EndGetAllDestinations(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                DestinationsResponse _result = ((DestinationsResponse)(base.EndInvoke("GetAllDestinations", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetStopDataByAddress(string address, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = address;
                System.IAsyncResult _result = base.BeginInvoke("GetStopDataByAddress", _args, callback, asyncState);
                return _result;
            }

            public GetStopDataByAddressResponseGetStopDataByAddressResult EndGetStopDataByAddress(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                GetStopDataByAddressResponseGetStopDataByAddressResult _result = ((GetStopDataByAddressResponseGetStopDataByAddressResult)(base.EndInvoke("GetStopDataByAddress", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetStopDataByRouteAndDirection(string route, string direction, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = route;
                _args[1] = direction;
                System.IAsyncResult _result = base.BeginInvoke("GetStopDataByRouteAndDirection", _args, callback, asyncState);
                return _result;
            }

            public GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult EndGetStopDataByRouteAndDirection(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult _result = ((GetStopDataByRouteAndDirectionResponseGetStopDataByRouteAndDirectionResult)(base.EndInvoke("GetStopDataByRouteAndDirection", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetStopDataByRoute(string route, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = route;
                System.IAsyncResult _result = base.BeginInvoke("GetStopDataByRoute", _args, callback, asyncState);
                return _result;
            }

            public ArrayOfXElement EndGetStopDataByRoute(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                ArrayOfXElement _result = ((ArrayOfXElement)(base.EndInvoke("GetStopDataByRoute", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetRoutesServicedByStopNumber(int stopId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = stopId;
                System.IAsyncResult _result = base.BeginInvoke("GetRoutesServicedByStopNumber", _args, callback, asyncState);
                return _result;
            }

            public Route[] EndGetRoutesServicedByStopNumber(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Route[] _result = ((Route[])(base.EndInvoke("GetRoutesServicedByStopNumber", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginStartTimer(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("StartTimer", _args, callback, asyncState);
                return _result;
            }

            public bool EndStartTimer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("StartTimer", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginStopTimer(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("StopTimer", _args, callback, asyncState);
                return _result;
            }

            public bool EndStopTimer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("StopTimer", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCurrentSettings(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentSettings", _args, callback, asyncState);
                return _result;
            }

            public string[] EndGetCurrentSettings(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("GetCurrentSettings", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginSetCurrentSettings(string[] values, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = values;
                System.IAsyncResult _result = base.BeginInvoke("SetCurrentSettings", _args, callback, asyncState);
                return _result;
            }

            public void EndSetCurrentSettings(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SetCurrentSettings", _args, result);
            }
        }
    }

    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny = true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SlSvcUtil", "3.7.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {

        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();

        public ArrayOfXElement()
        {
        }

        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }

        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }

        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext();
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }

        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement);
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }

}